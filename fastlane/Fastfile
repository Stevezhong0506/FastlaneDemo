# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do


  desc "发布到 苹果商店"
  lane :release_all_apple do
    sh "fastlane release_apple --env FastlaneDemo" #

    #在下方添加其他Target
    # sh "fastlane release_apple --env Other Target" #

  end

  desc "导出IPA包"
  lane :export_All_IPA do

    sh "fastlane export_IPA --env FastlaneDemo"    #





  end
  desc "发布 指定版本 到 苹果商店"
  lane :release_apple do

    # 更新Build版本号
    # sh " fastlane increment_build"
    # 更新Version版本号
    # sh " fastlane increment_version_major --env 嗨如意"
    gym(scheme: ENV['SCHEME_NAME'],
      silent: true,  # 隐藏没有必要的信息
      export_method:"app-store",
      clean: true  # 在构建前先clean
    )
    deliver

  end

  desc "导出iPA"
  lane :export_IPA do

    # 更新Build版本号
    # sh " fastlane increment_build"
    # 更新Version版本号
    # sh " fastlane increment_version_major --env 嗨如意"
    gym(scheme: ENV['SCHEME_NAME'],
      silent: true,  # 隐藏没有必要的信息
      export_method:"app-store",
      clean: true  # 在构建前先clean
    )
  end

  #递增主版本号Version
  lane :increment_version_major do
    #当前版本
    currentVersion = get_version_number(target: ENV['SCHEME_NAME'])
    #递增的版本数
    addVersionNum = "1"
    #将版本号分割
    firstVersionNum = currentVersion.to_s.split('.')[0]
    secondVersionNum = currentVersion.to_s.split('.')[1]
    thirdVersionNum = currentVersion.to_s.split('.')[2]
    #判断如果大于10就向前一位进位递增
    if	thirdVersionNum.to_i >=10 and secondVersionNum.to_i<10
      thirdVersionNum = 0
      secondVersionNum = secondVersionNum.to_i+addVersionNum.to_i
    elsif secondVersionNum.to_i >=10
      secondVersionNum = 0
      thirdVersionNum = 0
      firstVersionNum = firstVersionNum.to_i+addVersionNum.to_i
    else
      thirdVersionNum = thirdVersionNum.to_i+addVersionNum.to_i
    end
    #拼接版本号
    setVersion = "#{firstVersionNum.to_s}.#{secondVersionNum.to_s}.#{thirdVersionNum.to_s}"

    #设置版本号
    increment_version_number(
      version_number: "#{setVersion}" # Set a specific version number
    )
  end

  #递增构建版本号Build
  lane :increment_build do
    increment_build_number

  end

  #获取证书
  lane :getCert do
    cert
    sigh(force: true)
  end



end
